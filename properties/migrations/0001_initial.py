# Generated by Django 4.2.25 on 2025-10-24 17:10

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import properties.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('parties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=40, unique=True)),
                ('label', models.CharField(max_length=120)),
                ('icon', models.CharField(blank=True, help_text='Nom d’icône (libre)', max_length=40)),
            ],
            options={
                'verbose_name': 'Équipement',
                'verbose_name_plural': 'Équipements',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('property_type', models.CharField(choices=[('residential', 'Résidentiel'), ('commercial', 'Commercial'), ('land', 'Terrain')], max_length=32)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=120, null=True)),
                ('country', models.CharField(default="Côte d'Ivoire", max_length=120)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_properties', to='parties.party')),
                ('owner_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_owned_properties', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('bedrooms', models.IntegerField(default=0)),
                ('bathrooms', models.IntegerField(default=0)),
                ('size_m2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_available', models.BooleanField(default=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='UnitImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=properties.models.unit_image_upload_to)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.unit')),
            ],
            options={
                'ordering': ['ordering', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=properties.models.property_image_upload_to)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'ordering': ['ordering', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PropertyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(choices=[('plan', 'Plan'), ('title', 'Titre/Attestation'), ('other', 'Autre')], default='other', max_length=16)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to=properties.models.property_doc_upload_to)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='properties.property')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, help_text='Ex.: 24/7, nbre places, etc.', max_length=120)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='properties.amenity')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_amenities', to='properties.property')),
            ],
            options={
                'verbose_name': 'Équipement de bien',
                'verbose_name_plural': 'Équipements de bien',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_type', models.CharField(choices=[('rent', 'Location'), ('sale', 'Vente')], max_length=16)),
                ('price', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='XOF', max_length=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='properties.unit')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='properties.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VisitRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('confirmed', 'Confirmé'), ('completed', 'Réalisé'), ('cancelled', 'Annulé')], default='new', max_length=16)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_requests', to='properties.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['status', 'desired_date'], name='properties__status_ef106f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Valuation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(blank=True, help_text='Méthode/Cf document', max_length=120)),
                ('value', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='XOF', max_length=8)),
                ('valued_at', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valuations', to='properties.property')),
                ('valued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-valued_at'],
                'indexes': [models.Index(fields=['valued_at', 'value'], name='properties__valued__bad9b2_idx')],
            },
        ),
        migrations.CreateModel(
            name='UnitAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=120)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='properties.amenity')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_amenities', to='properties.unit')),
            ],
            options={
                'verbose_name': 'Équipement d’unité',
                'verbose_name_plural': 'Équipements d’unité',
                'unique_together': {('unit', 'amenity')},
            },
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['is_available'], name='properties__is_avai_2a217a_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['bedrooms', 'bathrooms'], name='properties__bedroom_1275a4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='unit',
            unique_together={('property', 'name')},
        ),
        migrations.AddIndex(
            model_name='propertyimage',
            index=models.Index(fields=['is_primary'], name='properties__is_prim_893694_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='propertyamenity',
            unique_together={('property', 'amenity')},
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_type'], name='properties__propert_5c7790_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['city'], name='properties__city_74fa1a_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['listing_type'], name='properties__listing_92411a_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['is_active', 'is_featured'], name='properties__is_acti_fbce01_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['published_at'], name='properties__publish_a3f32d_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['price'], name='properties__price_5abf0e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favoritelisting',
            unique_together={('user', 'listing')},
        ),
    ]
