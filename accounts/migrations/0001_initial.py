# Generated by Django 4.2.25 on 2025-10-24 17:10

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('client_individual', 'Client (particulier)'), ('client_company', 'Client (entreprise)'), ('owner', 'Propriétaire'), ('scout', 'Démarcheur')], default='client_individual', max_length=32)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Numéro de téléphone au format international', max_length=128, null=True, region=None)),
                ('company_name', models.CharField(blank=True, help_text='Raison sociale si le compte représente une entreprise (client_company/owner)', max_length=255, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(blank=True, help_text='Libellé: Domicile, Bureau, Siège, etc.', max_length=100)),
                ('line1', models.CharField(max_length=255)),
                ('line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('state', models.CharField(blank=True, max_length=120)),
                ('postal_code', models.CharField(blank=True, max_length=30)),
                ('country', django_countries.fields.CountryField(default='CI', max_length=2)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Adresse',
                'verbose_name_plural': 'Adresses',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('company_type', models.CharField(choices=[('landlord', 'Propriétaire / Bailleur'), ('agency', 'Agence immobilière'), ('corporate', 'Client entreprise'), ('developer', 'Promoteur immobilier')], max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('rc_number', models.CharField(blank=True, max_length=64, verbose_name='RCCM / Registre commerce')),
                ('tax_number', models.CharField(blank=True, max_length=64, verbose_name='N° contribuable')),
                ('website', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='accounts.address')),
            ],
            options={
                'verbose_name': 'Entreprise/Société',
                'verbose_name_plural': 'Entreprises/Sociétés',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_upload_to)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('national_id_number', models.CharField(blank=True, help_text='CNI/Passport…', max_length=64)),
                ('alt_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('alt_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('primary_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_for_users', to='accounts.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateur',
            },
        ),
        migrations.CreateModel(
            name='ScoutReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(help_text='Code de parrainage', max_length=12, unique=True)),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('validated', 'Validé'), ('converted', 'Converti'), ('rejected', 'Rejeté')], default='new', max_length=16)),
                ('notes', models.TextField(blank=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('commission_currency', models.CharField(default='XOF', max_length=8)),
                ('invited_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_by_scout', to=settings.AUTH_USER_MODEL)),
                ('scout', models.ForeignKey(limit_choices_to={'role': 'scout'}, on_delete=django.db.models.deletion.CASCADE, related_name='scout_referrals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parrainage démarcheur',
                'verbose_name_plural': 'Parrainages démarcheurs',
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=False)),
                ('marketing_opt_in', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Préférences de notification',
                'verbose_name_plural': 'Préférences de notification',
            },
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('id_card', "CNI / Carte d'identité"), ('passport', 'Passeport'), ('utility_bill', 'Facture (SODECI/CEI/…'), ('business_registration', "Registre de commerce / Attestation d'immatriculation")], max_length=32)),
                ('number', models.CharField(blank=True, max_length=64)),
                ('file', models.FileField(upload_to=accounts.models.doc_upload_to)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Validé'), ('rejected', 'Rejeté')], default='pending', max_length=16)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('owner_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.company')),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('owner_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kyc_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document KYC',
                'verbose_name_plural': 'Documents KYC',
            },
        ),
        migrations.CreateModel(
            name='CompanyMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('staff', 'Staff'), ('viewer', 'Viewer')], default='staff', max_length=16)),
                ('is_primary', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='accounts.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Membre d'entreprise",
                'verbose_name_plural': "Membres d'entreprise",
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.PositiveIntegerField()),
                ('bank_name', models.CharField(max_length=120)),
                ('account_holder', models.CharField(max_length=120)),
                ('iban', models.CharField(blank=True, max_length=34)),
                ('account_number', models.CharField(blank=True, max_length=64)),
                ('swift_bic', models.CharField(blank=True, max_length=11)),
                ('currency', models.CharField(default='XOF', max_length=8)),
                ('is_default', models.BooleanField(default=False)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Compte bancaire',
                'verbose_name_plural': 'Comptes bancaires',
            },
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['country', 'city'], name='accounts_ad_country_ee2c4b_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='scoutreferral',
            index=models.Index(fields=['status'], name='accounts_sc_status_918996_idx'),
        ),
        migrations.AddIndex(
            model_name='scoutreferral',
            index=models.Index(fields=['code'], name='accounts_sc_code_457b16_idx'),
        ),
        migrations.AddIndex(
            model_name='kycdocument',
            index=models.Index(fields=['type', 'status'], name='accounts_ky_type_d7ed55_idx'),
        ),
        migrations.AddConstraint(
            model_name='companymembership',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('user',), name='unique_primary_company_per_user'),
        ),
        migrations.AlterUniqueTogether(
            name='companymembership',
            unique_together={('user', 'company')},
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['company_type'], name='accounts_co_company_a32fed_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='accounts_co_name_a6c199_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['bank_name', 'currency'], name='accounts_ba_bank_na_c3dea9_idx'),
        ),
        migrations.AddConstraint(
            model_name='bankaccount',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('owner_content_type', 'owner_object_id'), name='unique_default_bank_account_per_owner'),
        ),
    ]
